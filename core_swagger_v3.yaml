openapi: 3.0.1
info:
  title: Riverbed NetIM RESTful APIs
  description: |-
    These services provide programmatic access to various types of data persisted within the system.  All endpoints are protected by HTTP Basic Authentication.  Some endpoints provide access only to users with 'ADMIN' role privileges.  Using these APIs you can access things like detailed attribute information about various types of resources, manipulate some configurable application settings and data, and more.

    The major resources of the data model defined within these APIs are:

    * Groups/Sites
    * Devices
    * Interfaces
    * Links
    * Hosts

    Each resource of the data model supports various actions and different attributes which can be accessed.  Please see the detailed definition of each endpoint and model resource to learn more about what is available.
  contact:
    name: Riverbed Global Support
    url: https://support.riverbed.com/
    email: support@riverbed.com
  license:
    name: "Riverbed Technology, Inc. - All Rights Reserved"
    url: https://www.riverbed.com/
  version: "2.0"
servers:
- url: /api/netim
security:
- basicAuth: []
tags:
- name: Archives APIs
  description: The Archives APIs provide access to the CLI file archives that have
    been collected over time for specific devices.
- name: Custom Attributes APIs
  description: |-
    The Custom Attributes APIs provide access to the custom attributes that can be associated with various types of resources.  Through these APIs you can take full programmatic control of the creation and application of custom attributes.

    Custom attributes find their definition and structure in what is referred to as a custom attribute definition.  In order to apply a 'value' to an resource of the model, a custom attribute definition must first be provided.  The custom attribute value provides an association of a 'value' to one or more model resources.
- name: Default Thresholds APIs
  description: The Default Thresholds APIs provide access to the default thresholds.  These
    default thresholds are utilized for alerting and health calculations.
- name: Devices APIs
  description: The Devices APIs provide access to data about devices.
- name: Groups/Sites APIs
  description: |-
    The Groups/Sites APIs provide access to data about groups.

    Groups/sites can 'contain' other groups/sites and/or devices.  Sites and groups generally behave similarly with the primary exception that sites are 'exclusive', meaning that a device or other site may 'belong' to only one site.  When using these APIs, groups and sites can be used interchangeably.  When a group 'ID' is referenced, that can be a group or site 'ID'.  When creating or modifying groups, those changes may not be immediately visible within the system, there may be a delay in persistence depending on system activity and load.
- name: Interfaces APIs
  description: The Interfaces APIs provide access to data about interfaces.
- name: Hosts APIs
  description: The Hosts APIs provide access to data about hosts.  Hosts are typically
    end-systems of varying types whose connection to a device in the model is automatically
    detected.
- name: Links APIs
  description: The Links APIs provide access to data about links.
- name: Metric Classes APIs
  description: The Metric Classes APIs provide information about the definition of
    the metric classes and metrics that can be accessed.
- name: Locations APIs
  description: The Locations APIs provide access to the locations available for assignment
    within the product.
- name: Polling APIs
  description: The Polling APIs provide access to various types of information and
    controls related to polling.
- name: Waps APIs
  description: The Waps APIs provide access to data about wireless access points.
    The connection of WAPs to WLCs in the model is automatically detected.
paths:
  /v1/default-thresholds/{id}:
    get:
      tags:
      - Default Thresholds APIs
      summary: Returns the Default Threshold associated to the id specified
      operationId: getThresholdV1
      parameters:
      - name: id
        in: path
        description: Default Threshold ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultThreshold'
        "404":
          description: The Default Threshold could not be found.
          content: {}
  /v1/default-thresholds:
    get:
      tags:
      - Default Thresholds APIs
      summary: Returns a list of Default Thresholds
      operationId: getDefaultThresholdsV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultThresholdList'
  /v1/device-access-infos:
    get:
      tags:
      - Devices APIs
      summary: "(ADMIN role required) Returns all of the device access infos in the\
        \ data model.  The response format is controlled by the 'Accept' header. \
        \ The supported 'Accept' types are application/json and text/plain. If not\
        \ provided, the default is 'application/json'.  When text/plain is requested,\
        \ the response content will be CSV formatted, equivalent to the format exported\
        \ by the Device Manager."
      operationId: getAllDeviceAccessInfosV1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAccessInfoList'
            text/plain:
              schema:
                $ref: '#/components/schemas/DeviceAccessInfoList'
  /v1/devices/{id}/hosts:
    get:
      tags:
      - Devices APIs
      summary: Returns all the detected IP hosts on the device.
      operationId: getHostsOnDeviceV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: detectedIPsOnly
        in: query
        schema:
          type: boolean
          default: false
      - name: includePollingInfo
        in: query
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostList'
        "404":
          description: The device could not be found
          content: {}
  /v1/devices/{id}/access-points:
    get:
      tags:
      - Devices APIs
      summary: Returns all the WAPs connected to this WLC.
      operationId: getWapsConnectedToDeviceV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: associatedWapsOnly
        in: query
        schema:
          type: boolean
          default: true
      - name: startTime
        in: query
        schema:
          type: integer
          format: int64
          default: -1
      - name: endTime
        in: query
        schema:
          type: integer
          format: int64
          default: -1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WapList'
        "404":
          description: The device could not be found
          content: {}
  /v1/devices:
    get:
      tags:
      - Devices APIs
      summary: Returns all of the devices in the data model.
      operationId: getAllDevicesV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: deviceIds
        in: query
        description: Device IDs to include in the response
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: deviceIp
        in: query
        description: IP of devices to include in the response
        schema:
          type: string
      - name: accessIp
        in: query
        description: Access IP of device to include in the response
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
  /v1/devices/{id}/polling-profile:
    get:
      tags:
      - Devices APIs
      summary: Returns the polling profile that the device is is associated with.
      operationId: getPollingProfileForDeviceV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollingProfileBean'
        "404":
          description: The device or polling profile could not be found
          content: {}
  /v1/devices/{id}/links:
    get:
      tags:
      - Devices APIs
      summary: Returns links associated with the device.
      operationId: getLinksForDeviceV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: hops
        in: query
        description: Number of hops away from the source device to include in the
          links output
        schema:
          type: integer
          format: int32
          default: 1
      - name: incPhysical
        in: query
        description: Whether to include physical links in the response
        schema:
          type: boolean
          default: true
      - name: incLogical
        in: query
        description: Whether to include logical links in the response
        schema:
          type: boolean
          default: false
      - name: incHealth
        in: query
        description: Whether to include endpoint health in response
        schema:
          type: boolean
          default: true
      - name: collapseClouds
        in: query
        description: Whether to collapse clouds in response
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkList'
        "404":
          description: The device could not be found
          content: {}
  /v1/devices/{id}/groups:
    get:
      tags:
      - Devices APIs
      summary: Returns all of the groups containing the device.
      operationId: getGroupsV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: query
        description: Type of group to return.
        schema:
          type: string
          enum:
          - Site
          - Group
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
        "404":
          description: The device could not be found.
          content: {}
  /v1/devices/{id}:
    get:
      tags:
      - Devices APIs
      summary: Returns the device.
      operationId: getDeviceV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "404":
          description: The device could not be found
          content: {}
  /v1/devices/{id}/interfaces:
    get:
      tags:
      - Devices APIs
      summary: Returns the interfaces on the device.
      operationId: getInterfacesOnDeviceV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: deviceIds
        in: query
        description: Exclude any interfaces not contained by the device(s) with the
          given ID(s).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: deviceIp
        in: query
        description: Only include interfaces contained by the device(s) with the given
          IP.
        schema:
          type: string
      - name: interfaceIds
        in: query
        description: Only include interfaces with the given interface IDs.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: interfaceIp
        in: query
        description: Only include interfaces with the given IP.
        schema:
          type: string
      - name: ifIndex
        in: query
        description: IfIndex of the interfaces to include in the response.
        schema:
          type: integer
          format: int32
      - name: polledOnly
        in: query
        description: Only include interfaces currently configured for polling
        schema:
          type: boolean
          default: false
      - name: pollingOverride
        in: query
        description: Only include interfaces with the specified polling override
        schema:
          type: string
          enum:
          - ALWAYS_POLL
          - NEVER_POLL
      - name: ifSpeedOverride
        in: query
        description: Only include interfaces whose ifSpeedIn or ifSpeedOut is set
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceList'
        "404":
          description: The device could not be found
          content: {}
  /v1/devices/{id}/device-access-info:
    get:
      tags:
      - Devices APIs
      summary: Returns the device access info for the device.
      operationId: getDeviceAccessInfoV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAccessInfo'
        "404":
          description: The device could not be found
          content: {}
  /v1/devices/{id}/archive/{type}/latest:
    get:
      tags:
      - Archives APIs
      - Devices APIs
      summary: Returns latest archiveId of the file type associated with the device.
      operationId: getArchivesForDeviceV1
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: File Type
        required: true
        schema:
          type: string
      - name: fileTag
        in: query
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "404":
          description: The device could not be found
          content: {}
  /v2/devices/{id}/ip-slas:
    get:
      tags:
      - Devices APIs
      summary: Returns all of the IP SLAs contained in the device.
      operationId: getIpSlasInDeviceV2
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: targeted
        in: query
        description: Targeted
        schema:
          type: string
          enum:
          - source
          - destination
          - both
      - name: startTime
        in: query
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
        "404":
          description: The device could not be found.
          content: {}
  /v2/devices/{id}/groups:
    get:
      tags:
      - Devices APIs
      summary: Returns all of the groups containing the device.
      operationId: getGroups_1V2
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: query
        description: Type of group to return.
        schema:
          type: string
          enum:
          - Site
          - Group
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
        "404":
          description: The device could not be found.
          content: {}
  /v2/devices/{id}:
    get:
      tags:
      - Devices APIs
      summary: Returns the device.
      operationId: getDevice_1V2
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "404":
          description: The device could not be found
          content: {}
  /v2/devices:
    get:
      tags:
      - Devices APIs
      summary: Returns all of the devices in the data model.
      operationId: getAllDevices_1V2
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      - name: deviceIds
        in: query
        description: Device IDs to include in the response
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: deviceIp
        in: query
        description: IP of devices to include in the response
        schema:
          type: string
      - name: accessIp
        in: query
        description: Access IP of device to include in the response
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
  /v2/devices/{id}/components:
    post:
      tags:
      - Devices APIs
      summary: Returns all of the model components contained in the device.
      operationId: getModelComponentsV2
      parameters:
      - name: id
        in: path
        description: Device ID
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelComponentFilterBean'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
        "404":
          description: The device could not be found.
          content: {}
      x-codegen-request-body-name: body
  /v2/groups/{id}/ip-slas:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all of the IP SLA tests contained by or targetted to the group.
      operationId: getIpSlasInGroupV2
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: targeted
        in: query
        description: Targeted
        schema:
          type: string
          enum:
          - source
          - destination
          - both
      - name: traverseSubGroups
        in: query
        description: Should response include Devices from all sub-groups in addition
          to direct members of the group
        schema:
          type: boolean
      - name: startTime
        in: query
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
        "404":
          description: The group could not be found.
          content: {}
  /v2/groups/{id}/devices:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all of the devices contained by the group.
      operationId: getDevicesInGroupV2
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: traverseSubGroups
        in: query
        description: Should response include Devices from all sub-groups in addition
          to direct members of the group
        schema:
          type: boolean
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      - name: deviceIds
        in: query
        description: Device IDs to include in the response
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
        "404":
          description: The group could not be found.
          content: {}
  /v2/groups/{id}/site-gateways:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns the site gateways
      operationId: getSiteGatewaysV2
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteGatewaysBean'
        "404":
          description: The group could not be found.
          content: {}
  /v2/groups:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all groups.
      operationId: getAllGroupsV2
      parameters:
      - name: type
        in: query
        description: Type of group to return.
        schema:
          type: string
          enum:
          - Site
          - Group
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
  /v2/groups/{id}:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns the group
      operationId: getGroupV2
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "404":
          description: The group could not be found.
          content: {}
  /v1/groups/{id}/devices:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all of the devices contained by the group.
      operationId: getDevicesInGroup_1V1
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: traverseSubGroups
        in: query
        description: Should response include Devices from all sub-groups in addition
          to direct members of the group
        schema:
          type: boolean
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: deviceIds
        in: query
        description: Device IDs to include in the response
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        "404":
          description: The group could not be found.
          content: {}
  /v1/groups/{id}/site-gateways:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns the site gateways
      operationId: getSiteGateways_1V1
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteGatewaysBean'
        "404":
          description: The group could not be found.
          content: {}
  /v1/groups:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all groups.
      operationId: getAllGroups_1V1
      parameters:
      - name: type
        in: query
        description: Type of group to return.
        schema:
          type: string
          enum:
          - Site
          - Group
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
  /v1/groups/{id}:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns the group
      operationId: getGroup_1V1
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "404":
          description: The group could not be found.
          content: {}
  /v1/groups/{id}/parent-groups:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all of the groups containing the group.
      operationId: getParentGroupsV1
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: query
        description: Type of group to return.
        schema:
          type: string
          enum:
          - Site
          - Group
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
        "404":
          description: The group could not be found.
          content: {}
  /v1/groups/{id}/links:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all of the links associated with devices within the group.
      operationId: getLinksForGroupV1
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: incPhysical
        in: query
        description: Whether to include physical links in the response
        schema:
          type: boolean
          default: true
      - name: incLogical
        in: query
        description: Whether to include logical links in the response
        schema:
          type: boolean
          default: false
      - name: incHealth
        in: query
        description: Whether to include endpoint health in response
        schema:
          type: boolean
          default: true
      - name: collapseClouds
        in: query
        description: Whether to collapse clouds in response
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkList'
        "404":
          description: The group could not be found.
          content: {}
  /v1/groups/{id}/sub-groups:
    get:
      tags:
      - Groups/Sites APIs
      summary: Returns all of the groups contained by the group.
      operationId: getSubGroupsV1
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: query
        description: Type of group to return.
        schema:
          type: string
          enum:
          - Site
          - Group
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
        "404":
          description: The group could not be found.
          content: {}
  /v1/hosts/{id}:
    get:
      tags:
      - Hosts APIs
      summary: Returns the host.
      operationId: getHostV1
      parameters:
      - name: id
        in: path
        description: Host ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        "404":
          description: The host could not be found
          content: {}
  /v1/hosts/{id}/connected-interface:
    get:
      tags:
      - Hosts APIs
      summary: Returns the interface that is connected to this host.
      operationId: getConnectedInterfaceV1
      parameters:
      - name: id
        in: path
        description: Host ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interface'
        "404":
          description: The host could not be found.
          content: {}
  /v1/hosts:
    get:
      tags:
      - Hosts APIs
      summary: Returns all of the hosts.
      operationId: getAllHostsV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: detectedIPsOnly
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostList'
  /v1/hosts/ip/{ip}:
    get:
      tags:
      - Hosts APIs
      summary: Returns the hosts with IP.
      operationId: getHostsWithIPV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: ip
        in: path
        description: Host IP
        required: true
        schema:
          type: string
      - name: detectedIPsOnly
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostList'
  /v1/hosts/ip/{ip}/connected-interface:
    get:
      tags:
      - Hosts APIs
      summary: Returns the interfaces that are connected to the hosts with IP.
      operationId: getInterfacesConnectedToIPV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: ip
        in: path
        description: Host IP
        required: true
        schema:
          type: string
      - name: detectedIPsOnly
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostList'
  /v1/hosts/connected-to-interface/{id}:
    get:
      tags:
      - Hosts APIs
      summary: Returns the hosts connected to interface with ID.
      operationId: getHostsConnectedToIfcV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: id
        in: path
        description: Interface Id
        required: true
        schema:
          type: integer
          format: int64
      - name: detectedIPsOnly
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostList'
  /v1/hosts/connected-to-device/{id}:
    get:
      tags:
      - Hosts APIs
      summary: Returns the hosts connected to device with ID.
      operationId: getHostsConnectedToDeviceV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: id
        in: path
        description: Device Id
        required: true
        schema:
          type: integer
          format: int64
      - name: detectedIPsOnly
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostList'
  /v1/interfaces/{id}:
    get:
      tags:
      - Interfaces APIs
      summary: Returns an interface.
      operationId: getInterfaceV1
      parameters:
      - name: id
        in: path
        description: ID of interface
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interface'
        "404":
          description: The interface could not be found.
          content: {}
  /v1/interfaces/{id}/hosts:
    get:
      tags:
      - Interfaces APIs
      summary: Returns all the detected IP hosts on the interface.
      operationId: getHostsOnInterfaceV1
      parameters:
      - name: id
        in: path
        description: Interface ID
        required: true
        schema:
          type: integer
          format: int64
      - name: detectedIPsOnly
        in: query
        schema:
          type: boolean
          default: false
      - name: includePollingInfo
        in: query
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostList'
        "404":
          description: The interface could not be found
          content: {}
  /v1/interfaces/{id}/sub-interfaces:
    get:
      tags:
      - Interfaces APIs
      summary: Returns the sub-interfaces for the interface.
      operationId: getSubInterfacesV1
      parameters:
      - name: id
        in: path
        description: Interface ID
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceList'
        "404":
          description: The interface could not be found
          content: {}
  /v1/interfaces/{id}/agg-interfaces:
    get:
      tags:
      - Interfaces APIs
      summary: Returns the aggregated interfaces for the interface.
      operationId: getAggregatedInterfacesV1
      parameters:
      - name: id
        in: path
        description: Interface ID
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceList'
        "404":
          description: The interface could not be found
          content: {}
  /v1/interfaces/{id}/links:
    get:
      tags:
      - Interfaces APIs
      summary: Returns all of the links associated with the interface.
      operationId: getLinksForInterfaceV1
      parameters:
      - name: id
        in: path
        description: ID of interface
        required: true
        schema:
          type: integer
          format: int64
      - name: incPhysical
        in: query
        description: Whether to include physical links in the response
        schema:
          type: boolean
          default: true
      - name: incLogical
        in: query
        description: Whether to include logical links in the response
        schema:
          type: boolean
          default: false
      - name: incHealth
        in: query
        description: Whether to include endpoint health in response
        schema:
          type: boolean
          default: true
      - name: collapseClouds
        in: query
        description: Whether to collapse clouds in response
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkList'
        "404":
          description: The interface could not be found
          content: {}
  /v2/ip-slas:
    get:
      tags:
      - IP SLAs APIs
      summary: Returns all of the SLAs in the network model.
      operationId: getAllIpSlasV2
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      - name: traverseSubGroups
        in: query
        schema:
          type: boolean
      - name: fromGroups
        in: query
        description: IP SLAs configured from all the devices belonging to the groups
          listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: toGroups
        in: query
        description: IP SLAs targeted to the devices belonging to the groups listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: fromDevices
        in: query
        description: IP SLAs configured from all the devices listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: toDevices
        in: query
        description: IP SLAs targeted to the devices listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: toAddresses
        in: query
        description: IP SLAs target address.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeJitter
        in: query
        description: Include IP SLA Jitter.
        schema:
          type: boolean
      - name: includeLatency
        in: query
        description: Include IP SLA Latency.
        schema:
          type: boolean
      - name: startTime
        in: query
        description: IP SLAs with metric from the start time.
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        description: IP SLAs with metric upto the end time.
        schema:
          type: integer
          format: int64
      - name: testType
        in: query
        description: IP SLAs with the test types listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: srcAddresses
        in: query
        description: IP SLAs with the source addresses listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: srcProtocols
        in: query
        description: IP SLAs with the source protocols listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: slaNames
        in: query
        description: IP SLAs having the names listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: srcPorts
        in: query
        description: IP SLAs with the source ports listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: dstPorts
        in: query
        description: IP SLAs with the destination ports listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: srcIndexes
        in: query
        description: IP SLAs with the indexes listed.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: testTarget
        in: query
        description: Specify if the IP SLAs targeted-to/sourced-from the device/group
          specified
        schema:
          type: string
          enum:
          - SOURCE
          - DESTINATION
          - BOTH
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
  /v2/ip-slas/{id}:
    get:
      tags:
      - IP SLAs APIs
      summary: Returns the IP SLA.
      operationId: getIpSlaV2
      parameters:
      - name: id
        in: path
        description: IP SLA component ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
  /v1/legal/{packageType}:
    get:
      tags:
      - Legal APIs
      summary: "Returns a file containing the NetIM legal details for the specified\
        \ type of packages. Package types are JAVA, UBUNTU, or STANDALONE."
      operationId: getLegalDetailsV1
      parameters:
      - name: packageType
        in: path
        description: Software package type
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/StreamingOutput'
        "500":
          description: Could not return the legal information
          content: {}
  /v1/links:
    get:
      tags:
      - Links APIs
      summary: Returns all of the links.
      operationId: getAllLinksV1
      parameters:
      - name: incPhysical
        in: query
        description: Whether to include physical links in the response
        schema:
          type: boolean
          default: true
      - name: incLogical
        in: query
        description: Whether to include logical links in the response
        schema:
          type: boolean
          default: false
      - name: incHealth
        in: query
        description: Whether to include endpoint health in response
        schema:
          type: boolean
          default: true
      - name: collapseClouds
        in: query
        description: Whether to collapse clouds in response
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkList'
  /v1/links/{id}:
    get:
      tags:
      - Links APIs
      summary: Returns the link.
      operationId: getLinkV1
      parameters:
      - name: id
        in: path
        description: Link ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
        "404":
          description: The link could not be found
          content: {}
  /v2/model-components:
    post:
      tags:
      - Model Components APIs
      summary: Returns all of the model components in the network model.
      operationId: getAllEnhancedModelComponentsV2
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: pageId
        in: query
        description: Starting element id in the request
        schema:
          type: string
          default: "0"
      requestBody:
        description: Component filter to get the components matching the filter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelComponentFilterBean'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
      x-codegen-request-body-name: body
  /v2/model-components/{id}:
    get:
      tags:
      - Model Components APIs
      summary: Returns the model component.
      operationId: getModelComponentV2
      parameters:
      - name: id
        in: path
        description: Model Component ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorItemList'
  /v2/model-components-search:
    post:
      tags:
      - Model Components Search APIs
      summary: Returns all of the model components in the network model.
      operationId: getAllEnhancedModelComponentsHierarchyV2
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ModelComponentHierarchyFilterBean'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-codegen-request-body-name: body
  /v2/pollers-stats:
    get:
      tags:
      - Pollers Statistics APIs
      summary: Returns all of the pollers' statistics summary.
      operationId: getAllPollerSummariesV2
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollerSummaryBeanList'
  /v2/pollers-stats/{name}/{interval}:
    get:
      tags:
      - Pollers Statistics APIs
      summary: Returns the named poller's statistics of a polling interval in time
        range.
      operationId: getPollerCycleStatsTimeSeriesV2
      parameters:
      - name: name
        in: path
        description: Poller Name
        required: true
        schema:
          type: string
      - name: interval
        in: path
        description: Polling Interval
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        schema:
          type: integer
          format: int64
          default: -1
      - name: endTime
        in: query
        schema:
          type: integer
          format: int64
          default: -1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollerCycleStatsTimeSeriesBean'
        "404":
          description: The poller-interval instance could not be found
          content: {}
  /v2/pollers-stats/{name}:
    get:
      tags:
      - Pollers Statistics APIs
      summary: Returns the named poller's statistics of a all polling intervals in
        time range.
      operationId: getPollerCycleStatsTimeSeries_1V2
      parameters:
      - name: name
        in: path
        description: Poller Name
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        schema:
          type: integer
          format: int64
          default: -1
      - name: endTime
        in: query
        schema:
          type: integer
          format: int64
          default: -1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollerCycleStatsTimeSeriesBean'
        "404":
          description: The poller instance could not be found
          content: {}
  /v1/polling-profiles:
    get:
      tags:
      - Polling APIs
      summary: Returns a list of polling profiles.
      operationId: getAllPollingProfilesV1
      parameters:
      - name: limit
        in: query
        description: Maximum number of elements in the response
        schema:
          type: integer
          format: int32
          default: 5000
      - name: offset
        in: query
        description: Number of elements to skip in the response
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollingProfileBeanList'
        "500":
          description: "An error occurred, the polling profiles could not be retrieved."
          content: {}
  /v1/polling-profiles/{id}:
    get:
      tags:
      - Polling APIs
      summary: Returns the polling profile given by the provided id.
      operationId: getPollingProfileV1
      parameters:
      - name: id
        in: path
        description: Polling Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollingProfileBean'
        "404":
          description: The polling profile could not be found.
          content: {}
        "500":
          description: "An error occurred, the polling profile could not be retrieved."
          content: {}
components:
  schemas:
    FilterExpression:
      type: object
      properties:
        filterExpressionType:
          type: string
          enum:
          - DEVICE
          - INTERFACE
          - NETWORK
          - GROUP
          - TEST
          - PATH
        active:
          type: boolean
        expressions:
          uniqueItems: true
          type: array
          items:
            type: string
    FilterExpressions:
      type: object
      properties:
        filterExpressionTypeSetMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FilterExpression'
    ResourceLink:
      type: object
      properties:
        self:
          type: object
          additionalProperties:
            type: string
            format: uri
          readOnly: true
    Threshold:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        metricClassId:
          type: string
        metricId:
          type: string
        minor:
          type: string
        major:
          type: string
        critical:
          type: string
        operator:
          $ref: '#/components/schemas/ThresholdOperator'
        algorithm:
          $ref: '#/components/schemas/ThresholdAlgorithm'
    ThresholdAlgorithm:
      type: object
      properties:
        name:
          type: string
        displayString:
          type: string
    ThresholdOperator:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ListMeta:
      type: object
      properties:
        total:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        next_offset:
          type: integer
          format: int32
          readOnly: true
        prev_offset:
          type: integer
          format: int32
          readOnly: true
    StreamingOutput:
      type: object
    ObjectType:
      type: object
      properties:
        type:
          type: string
        promoted:
          type: boolean
    ConfigFileArchiveInfo:
      type: object
      properties:
        weeksToRetain:
          type: string
        versionsToRetain:
          type: string
    DefaultThreshold:
      required:
      - algorithm
      - operator
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        metricClassId:
          type: string
        metricId:
          type: string
        minor:
          type: string
        major:
          type: string
        critical:
          type: string
        operator:
          type: string
        algorithm:
          type: string
    ModifiableDefaultThreshold:
      required:
      - algorithm
      - operator
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        minor:
          type: string
        major:
          type: string
        critical:
          type: string
        operator:
          type: string
        algorithm:
          type: string
    DefaultThresholdList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DefaultThreshold'
        meta:
          $ref: '#/components/schemas/ListMeta'
    DeviceAccessInfo:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        active:
          type: boolean
        activeCLIConfigCollection:
          type: boolean
          description: CLI Collection
        activeMIBConfigCollection:
          type: boolean
          description: SNMP Collection
        cliConfigCollectionStatus:
          type: string
          description: CLI Collection Status
        mibConfigCollectionStatus:
          type: string
          description: SNMP Collection Status
        activeWMIConfigCollection:
          type: boolean
          description: WMI Collection
        wmiConfigCollectionStatus:
          type: string
          description: WMI Collection Status
        activeMetricsCollection:
          type: boolean
          description: Metric Collection
        activeAWSConfigCollection:
          type: boolean
          description: AWS Collection
        sitegateway:
          type: boolean
          description: Site Gateway
        description:
          type: string
        deviceDriver:
          type: string
        accessAddress:
          type: string
          description: "Address (Hostname, FQDN, or IPv4 Address) at which this device\
            \ can be accessed"
        cliUsername:
          type: string
        cliLoginScript:
          type: string
        cliAccessMethod:
          type: integer
          description: "Not Set = 0, Telnet = 1, SSHv1 = 2, SSHv2 = 3"
          format: int32
        cliConnectionProfileName:
          type: string
        snmpVersion:
          type: integer
          description: "Not Set = 1000, v1 = 0, v2c = 1, SNMPv3 = 3"
          format: int32
        snmpV3SecurityLevel:
          type: string
        snmpV3Username:
          type: string
        snmpV3Context:
          type: string
        snmpV3ContextId:
          type: string
        snmpV3AuthProtocol:
          type: string
        snmpV3PrivacyProtocol:
          type: string
        wmiUsername:
          type: string
        wmiDomain:
          type: string
        awsInstanceId:
          type: string
        awsAccessKeyId:
          type: string
        awsRegion:
          type: string
        extMgmtSrvType:
          type: string
        extMgmtSrvId:
          type: string
        extMgmtSrvDevId:
          type: string
        telemetryOptionEnum:
          type: integer
          format: int32
        gnmiAddress:
          type: string
        gnmiUserName:
          type: string
        gnmiPassword:
          type: string
        awsSecretAccessKey:
          type: string
        snmpV3AuthPassword:
          type: string
    DeviceAccessInfoList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeviceAccessInfo'
        meta:
          $ref: '#/components/schemas/ListMeta'
    GenericHttpResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        mediaType:
          $ref: '#/components/schemas/MediaType'
        entity:
          type: object
          properties: {}
        statusInfo:
          $ref: '#/components/schemas/StatusType'
    GenericHttpResponseList:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/GenericHttpResponse'
    MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        wildcardType:
          type: boolean
        wildcardSubtype:
          type: boolean
    StatusType:
      type: object
      properties:
        family:
          type: string
          enum:
          - INFORMATIONAL
          - SUCCESSFUL
          - REDIRECTION
          - CLIENT_ERROR
          - SERVER_ERROR
          - OTHER
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    DeviceAccessInfoFile:
      type: object
      properties:
        name:
          type: string
        lines:
          type: array
          items:
            type: string
    HealthEnum:
      type: object
      properties:
        healthValue:
          type: integer
          format: int32
        healthName:
          type: string
    Host:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        osType:
          type: string
        osVersion:
          type: string
        vendor:
          type: string
        deviceType:
          type: string
        src:
          type: string
        ouiName:
          type: string
        ipAddress:
          type: string
        macAddress:
          type: string
        detectedNodeId:
          type: string
        connectedInterface:
          $ref: '#/components/schemas/Interface'
        deviceId:
          type: string
        creationTime:
          type: string
        updateTime:
          type: string
        modifiedTime:
          type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    HostList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Host'
        meta:
          $ref: '#/components/schemas/ListMeta'
    Interface:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        ifName:
          type: string
        ifPhysAddress:
          type: string
        ipAddr:
          type: string
        ipAddresses:
          type: array
          items:
            type: string
        ifType:
          type: string
        ifDescr:
          type: string
        ifSpeed:
          type: string
        ifSpeedIn:
          type: string
        ifSpeedOut:
          type: string
        ifAlias:
          type: string
        ifHighSpeed:
          type: integer
          format: int32
        ifIndex:
          type: integer
          format: int32
        ifMtu:
          type: string
        ifPreferredName:
          type: string
        preferredName:
          type: string
        ifPromiscuousMode:
          type: integer
          format: int32
        ifOperStatus:
          type: integer
          format: int32
        ifAdminStatus:
          type: integer
          format: int32
        health:
          $ref: '#/components/schemas/HealthEnum'
        configuredForPolling:
          type: boolean
          description: Is this interface currently configured to be polled?  This
            takes into account both interface filters as well as manual polling overrides.  If
            the value is not provided/null then a determination about if it should
            or should not be polled could not be made.
        pollingOverride:
          type: string
          enum:
          - "OFF"
          - ALWAYS_POLL
          - NEVER_POLL
        customAttributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    Wap:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        apID:
          type: string
        apName:
          type: string
        apLocation:
          type: string
        apIpAddress:
          type: string
        apMacAddress:
          type: string
        apEthernetMacAddress:
          type: string
        apModel:
          type: string
        apOSVersion:
          type: string
        apSoftwareVersion:
          type: string
        apSerialNumber:
          type: string
        apType:
          type: string
        apOperationStatus:
          type: number
          format: double
        deviceId:
          type: integer
          format: int64
        links:
          $ref: '#/components/schemas/ResourceLink'
    WapList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Wap'
        meta:
          $ref: '#/components/schemas/ListMeta'
    ObjectIdsBean:
      type: object
      properties:
        objectIds:
          type: array
          items:
            type: string
    PollingProfileBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        description:
          type: string
        creationTimeStamp:
          type: integer
          format: int64
        lastModifiedTimeStamp:
          type: integer
          format: int64
        applyToAllDevices:
          type: boolean
        deviceAccessInfoIds:
          type: array
          items:
            type: string
        default:
          type: boolean
        active:
          type: boolean
        profileIdFormatted:
          type: string
        profileNameAndIdFormatted:
          type: string
        profileNameFormatted:
          type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    EndPoint:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        type:
          type: string
        child:
          $ref: '#/components/schemas/EndPoint'
        health:
          $ref: '#/components/schemas/HealthEnum'
        parentId:
          type: string
        vendor:
          type: string
        deviceType:
          type: string
        ifType:
          type: string
        ifName:
          type: string
        ifDescr:
          type: string
        ifAlias:
          type: string
        ifSpeed:
          type: string
        ifPhysAddress:
          type: string
        ifPreferredName:
          type: string
        ipAddresses:
          type: array
          items:
            type: string
        aggIfaces:
          type: array
          items:
            type: string
    Link:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        linkType:
          type: string
        isLocked:
          type: boolean
        isPhysical:
          type: boolean
        aggLinks:
          $ref: '#/components/schemas/LinkList'
        endPoints:
          type: array
          items:
            $ref: '#/components/schemas/EndPoint'
        links:
          $ref: '#/components/schemas/ResourceLink'
    LinkList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        meta:
          $ref: '#/components/schemas/ListMeta'
    Group:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        health:
          $ref: '#/components/schemas/HealthEnum'
        interfaceHealth:
          $ref: '#/components/schemas/HealthEnum'
        links:
          $ref: '#/components/schemas/ResourceLink'
        sitegateways:
          $ref: '#/components/schemas/SiteGatewaysBean'
        type:
          type: string
        description:
          type: string
        deviceCount:
          type: integer
          format: int32
        parentGroupCount:
          type: integer
          format: int32
        subGroupCount:
          type: integer
          format: int32
        siteMetadata:
          $ref: '#/components/schemas/Site-specificMetadata'
        customAttributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    GroupList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        meta:
          $ref: '#/components/schemas/ListMeta'
    SiteLocation:
      type: object
      properties:
        countryCode:
          type: string
        regionID:
          type: string
        city:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
    Site-specificMetadata:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/SiteLocation'
        timeZoneID:
          type: string
        timeZoneDisplayName:
          type: string
    SiteGatewaysBean:
      type: object
      properties:
        name:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        description:
          type: string
          description: Description associated with the notification suppression config
        gateways:
          uniqueItems: true
          type: array
          description: Set of device id's that form the set of gateways for the site
          items:
            type: integer
            format: int64
        siteId:
          type: integer
          format: int64
        creationTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
          readOnly: true
        modifiedTime:
          type: integer
          format: int64
          readOnly: true
        createdBy:
          type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    Device:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        deviceName:
          type: string
          description: Unique name
        accessAddress:
          type: string
          description: "Address (Hostname, FQDN, or IPv4 Address) at which this device\
            \ can be accessed"
        description:
          type: string
          description: Description for this device
        city:
          type: string
          description: ID of the city in which this device is located.
        regionID:
          type: string
          description: ID of the region in which this device is located.
        countryCode:
          type: string
          description: ID of the country in which this device is located.
        timeZone:
          type: string
        timeZoneDisplayName:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        health:
          $ref: '#/components/schemas/HealthEnum'
        interfaceHealth:
          $ref: '#/components/schemas/HealthEnum'
        deviceType:
          type: string
        hostname:
          type: string
        primaryAddress:
          type: string
        vendor:
          type: string
        nodeType:
          type: string
        sysObjectID:
          type: string
        deviceAccessInfoId:
          type: string
        sysServices:
          type: string
        sysDescr:
          type: string
        prompt:
          type: string
        sysDomain:
          type: string
        sysName:
          type: string
        sysLocation:
          type: string
        sysContact:
          type: string
        cityDisplayName:
          type: string
        regionIDDisplayName:
          type: string
        countryCodeDisplayName:
          type: string
        osVersion:
          type: string
        numInterfaces:
          type: integer
          format: int32
        numConnectedHosts:
          type: integer
          format: int32
        ifNumber:
          type: integer
          format: int32
        serialNumber:
          type: string
        ipAddresses:
          type: array
          items:
            type: string
        customAttributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        sitegateway:
          type: boolean
        deviceAccessInfo:
          $ref: '#/components/schemas/DeviceAccessInfo'
        configuredForPolling:
          type: boolean
          description: "Is this device currently configured to be polled?  If the\
            \ value is not present/null, then a determination about if it should or\
            \ should not be polled could not be made."
        links:
          $ref: '#/components/schemas/ResourceLink'
    DeviceList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        meta:
          $ref: '#/components/schemas/ListMeta'
    ModifiableDevice:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        deviceName:
          type: string
          description: Unique name
        accessAddress:
          type: string
          description: "Address (Hostname, FQDN, or IPv4 Address) at which this device\
            \ can be accessed"
        description:
          type: string
          description: Description for this device
        city:
          type: string
          description: ID of the city in which this device is located.
        regionID:
          type: string
          description: ID of the region in which this device is located.
        countryCode:
          type: string
          description: ID of the country in which this device is located.
        timeZone:
          type: string
          description: Time zone in which this device is located.
        timeZoneDisplayName:
          type: string
          description: Time zone region in which this device is located.
        deviceAccessInfo:
          $ref: '#/components/schemas/ModifiableDeviceAccessInfoBean'
        links:
          $ref: '#/components/schemas/ResourceLink'
    ModifiableDeviceAccessInfoBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        active:
          type: boolean
        activeCLIConfigCollection:
          type: boolean
          description: CLI Collection
        activeMIBConfigCollection:
          type: boolean
          description: SNMP Collection
        cliConfigCollectionStatus:
          type: string
          description: CLI Collection Status
        mibConfigCollectionStatus:
          type: string
          description: SNMP Collection Status
        activeWMIConfigCollection:
          type: boolean
          description: WMI Collection
        wmiConfigCollectionStatus:
          type: string
          description: WMI Collection Status
        activeMetricsCollection:
          type: boolean
          description: Metric Collection
        activeAWSConfigCollection:
          type: boolean
          description: AWS Collection
        sitegateway:
          type: boolean
          description: Site Gateway
        description:
          type: string
        deviceDriver:
          type: string
        accessAddress:
          type: string
          description: "Address (Hostname, FQDN, or IPv4 Address) at which this device\
            \ can be accessed"
        cliUsername:
          type: string
        cliLoginScript:
          type: string
        cliAccessMethod:
          type: integer
          description: "Not Set = 0, Telnet = 1, SSHv1 = 2, SSHv2 = 3"
          format: int32
        cliConnectionProfileName:
          type: string
        snmpVersion:
          type: integer
          description: "Not Set = 1000, v1 = 0, v2c = 1, SNMPv3 = 3"
          format: int32
        snmpV3SecurityLevel:
          type: string
        snmpV3Username:
          type: string
        snmpV3Context:
          type: string
        snmpV3ContextId:
          type: string
        snmpV3AuthProtocol:
          type: string
        snmpV3PrivacyProtocol:
          type: string
        wmiUsername:
          type: string
        wmiDomain:
          type: string
        awsInstanceId:
          type: string
        awsAccessKeyId:
          type: string
        awsRegion:
          type: string
        extMgmtSrvType:
          type: string
        extMgmtSrvId:
          type: string
        extMgmtSrvDevId:
          type: string
        telemetryOptionEnum:
          type: integer
          format: int32
        gnmiAddress:
          type: string
        gnmiUserName:
          type: string
        gnmiPassword:
          type: string
        wmiPassword:
          type: string
        awsSecretAccessKey:
          type: string
        cliPassword:
          type: string
        cliPrivPassword:
          type: string
        snmpV3Password:
          type: string
        snmpV3PrivacyPassword:
          type: string
        snmpCommunityString:
          type: string
        snmpV3AuthPassword:
          type: string
    ModifiableDeviceList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ModifiableDevice'
        meta:
          $ref: '#/components/schemas/ListMeta'
    InterfaceList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Interface'
        meta:
          $ref: '#/components/schemas/ListMeta'
    CursorItemList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties: {}
        meta:
          $ref: '#/components/schemas/CursorListMeta'
    CursorListMeta:
      type: object
      properties:
        count:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageId:
          type: string
        nextPageId:
          type: string
    ModelComponentFilterBean:
      required:
      - componentType
      type: object
      properties:
        componentType:
          type: string
        attributeFilters:
          type: object
          additionalProperties:
            type: string
        includeMappingAttributes:
          type: boolean
        includeGroupMemberships:
          type: boolean
        includeContainment:
          type: boolean
    ForecastComponent:
      type: object
      properties:
        active:
          type: boolean
        name:
          type: string
        metricClass:
          type: string
        metric:
          type: string
        thresholdType:
          type: string
        majorTTEThreshold:
          type: string
        criticalTTEThreshold:
          type: string
        forecastSettings:
          type: array
          items:
            $ref: '#/components/schemas/ForecastSettingDTO'
    ForecastProfileBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        description:
          type: string
        creationTimeStamp:
          type: integer
          format: int64
        lastModifiedTimeStamp:
          type: integer
          format: int64
        applyToAllDevices:
          type: boolean
        addDeviceAccessInfoIds:
          type: array
          description: List of deviceAccessInfoIds to add to this polling profile
          items:
            type: string
        removeDeviceAccessInfoIds:
          type: array
          description: List of deviceAccessInfoIds to remove from this polling profile
          items:
            type: string
        deviceAccessInfoIds:
          type: array
          items:
            type: string
        forecastComponents:
          type: array
          items:
            $ref: '#/components/schemas/ForecastComponent'
        default:
          type: boolean
        active:
          type: boolean
        profileIdFormatted:
          type: string
        profileNameAndIdFormatted:
          type: string
        profileNameFormatted:
          type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    ForecastSettingDTO:
      type: object
      properties:
        name:
          type: string
        regressionAlgorithm:
          type: string
        metricDataExtractorType:
          type: string
    ForecastConfiguration:
      type: object
      properties:
        version:
          type: string
        id:
          type: integer
          format: int64
        lastUpdateTime:
          type: integer
          format: int64
        forecastProfileDTOMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ForecastProfileDTO'
        forecastExtractorDefs:
          $ref: '#/components/schemas/ForecastExtractorDefs'
        globalDefaultForecastComponents:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ForecastComponent'
    ForecastExtractorDef:
      type: object
      properties:
        name:
          type: string
        extractorDefMap:
          type: object
          additionalProperties:
            type: string
    ForecastExtractorDefs:
      type: object
      properties:
        extractorDefs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ForecastExtractorDef'
    ForecastProfileDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        isDefault:
          type: boolean
        forecastComponentMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ForecastComponent'
        default:
          type: boolean
        deviceIdToNodeInfoMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NodeInfo'
    NodeInfo:
      type: object
      properties:
        sysObjId:
          type: string
        sysDescr:
          type: string
        timeCreated:
          type: integer
          format: int64
        timeUpdated:
          type: integer
          format: int64
        operatingSystem:
          type: string
        lastLogonTimestamp:
          type: string
        timeZoneID:
          type: string
        countryCode:
          type: string
        regionID:
          type: string
        city:
          type: string
        postalCode:
          type: string
        longitude:
          type: number
          format: float
        latitude:
          type: number
          format: float
        subRegion:
          type: string
        di:
          type: integer
          format: int64
        ui:
          type: integer
          format: int64
        sv:
          type: integer
          format: int32
        ha:
          type: string
        pw:
          type: string
        pp:
          type: string
        cs:
          type: string
        nn:
          type: string
        un:
          type: string
        rt:
          type: string
        sn:
          type: string
        am:
          type: integer
          format: int32
        cm:
          type: string
        av:
          type: boolean
        DCFC:
          type: boolean
        DMCI:
          type: boolean
        MIUI:
          type: boolean
        DWCI:
          type: boolean
        adl:
          type: array
          items:
            type: object
            properties: {}
        v3ap:
          type: string
        v3pp:
          type: string
        v3cn:
          type: string
        v3ci:
          type: string
        v3u:
          type: string
        v3al:
          type: string
        v3pl:
          type: string
        v3sl:
          type: string
        ssn:
          type: string
        dn:
          type: string
        et:
          type: boolean
        cpn:
          type: string
        ap:
          type: integer
          format: int32
        twofp:
          type: string
        wmiun:
          type: string
        wmipw:
          type: string
        wmidn:
          type: string
        ext:
          type: string
        exi:
          type: string
        exd:
          type: string
    ForecastProfileBeanList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ForecastProfileBean'
        meta:
          $ref: '#/components/schemas/ListMeta'
    CreatableGroup:
      required:
      - type
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        addDevices:
          type: array
          description: List of devices (given by ID) to be added to the group.
          items:
            type: integer
            format: int64
        addGroups:
          type: array
          description: List of groups (given by ID) to be added to the group.
          items:
            type: integer
            format: int64
        pushSiteLocationToAddedDevices:
          type: boolean
          description: "If devices are being added to the site, whether those devices\
            \ should be updated to havesame location as this site. This will permanently\
            \ replace current location of the device. Default - false"
        pushSiteTZToAddedDevices:
          type: boolean
          description: "If devices are being added to the site, whether those devices\
            \ should be updated to havesame time zone as this site. This will permanently\
            \ replace, current timezone of the device. Default - false"
        type:
          pattern: User|Subnet
          type: string
          description: "Group = 'User', Site = 'Subnet'"
        siteMetadata:
          $ref: '#/components/schemas/SiteMetadataUpdateBean'
    SiteLocationBean:
      required:
      - city
      - countryCode
      - regionID
      type: object
      properties:
        countryCode:
          type: string
          description: Country code of the site
        regionID:
          type: string
          description: Region ID of the site
        city:
          type: string
          description: City of the site
      description: "Location specifier of a site. Currently, all fields are mandatory.\
        \ During updates to existing site, empty values are treated as explicitly\
        \ setting those attributes to null. As a result, if any field is empty all\
        \ others should be empty as well.Do not provide this type, if you want to\
        \ leave the location unchanged during updates"
    SiteMetadataUpdateBean:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/SiteLocationBean'
        timeZoneID:
          type: string
          description: Time Zone ID of the site. Empty string is treated as explicitly
            setting the value to null during update
        pushLocationToAllMemberDevices:
          type: boolean
          description: "If true, the current or new location of the site will be copied\
            \ over to all memberdevices. This will permanently replace all member\
            \ device's current location. Default - false"
        pushTZToAllMemberDevices:
          type: boolean
          description: "If true, the current or new time zone of the site will be\
            \ copied over to all memberdevices. This will permanently replace all\
            \ member device's current time zone. Default - false"
      description: Attributes used to update location/timezone of a site
    ModifiableGroup:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        addDevices:
          type: array
          description: List of devices (given by ID) to be added to the group.
          items:
            type: integer
            format: int64
        addGroups:
          type: array
          description: List of groups (given by ID) to be added to the group.
          items:
            type: integer
            format: int64
        pushSiteLocationToAddedDevices:
          type: boolean
          description: "If devices are being added to the site, whether those devices\
            \ should be updated to havesame location as this site. This will permanently\
            \ replace current location of the device. Default - false"
        pushSiteTZToAddedDevices:
          type: boolean
          description: "If devices are being added to the site, whether those devices\
            \ should be updated to havesame time zone as this site. This will permanently\
            \ replace, current timezone of the device. Default - false"
        removeDevices:
          type: array
          description: List of devices (given by ID) to be removed from the group.
          items:
            type: integer
            format: int64
        removeGroups:
          type: array
          description: List of groups (given by ID) to be removed from the group.
          items:
            type: integer
            format: int64
        siteMetadata:
          $ref: '#/components/schemas/SiteMetadataUpdateBean'
    ModifiableInterface:
      type: object
      properties:
        ifSpeedIn:
          type: string
        ifSpeedOut:
          type: string
        pollingOverride:
          type: string
    ModifiableEndPointBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        type:
          type: string
        child:
          $ref: '#/components/schemas/ModifiableEndPointBean'
    ModifiableLink:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        linkType:
          type: string
        isLocked:
          type: boolean
        endPoints:
          type: array
          items:
            $ref: '#/components/schemas/ModifiableEndPointBean'
        links:
          $ref: '#/components/schemas/ResourceLink'
    ModifiableLinkList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ModifiableLink'
        meta:
          $ref: '#/components/schemas/ListMeta'
    City:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        countryId:
          type: string
        countryName:
          type: string
        regionId:
          type: string
        regionName:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        links:
          $ref: '#/components/schemas/ResourceLink'
    Country:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        countryCode:
          type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    CountryList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Country'
        meta:
          $ref: '#/components/schemas/ListMeta'
    Region:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        regionID:
          type: string
        countryId:
          type: string
        countryName:
          type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    RegionList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Region'
        meta:
          $ref: '#/components/schemas/ListMeta'
    CityList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/City'
        meta:
          $ref: '#/components/schemas/ListMeta'
    BitSetDataValue:
      type: object
      properties:
        dvName:
          type: string
        bitIndex:
          type: integer
          format: int32
        dataString:
          type: string
    Metric:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        description:
          type: string
        units:
          type: string
        index:
          type: boolean
        alertable:
          type: boolean
        nameExt:
          type: boolean
        valueEnumMap:
          type: object
          additionalProperties:
            type: string
          description: "Mapping of raw values to their well-known value, if applicable."
        valueBitsetMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BitSetDataValue'
          description: Bitset definition of bit position to value.
        converter:
          $ref: '#/components/schemas/MetricConverter'
        componentPart:
          type: boolean
    MetricClass:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        description:
          type: string
        category:
          type: string
        supportedTypes:
          type: array
          items:
            type: string
        metrics:
          $ref: '#/components/schemas/MetricList'
        supportedRollups:
          type: array
          items:
            type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    MetricConverter:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        converterType:
          type: string
        fromTable:
          type: string
        fromOid:
          type: string
        lookupFromTable:
          type: string
        lookupFromOid:
          type: string
        value:
          type: string
        operand1:
          type: string
        operand2:
          type: string
        operation:
          type: string
        fieldValue:
          type: string
        enumMappings:
          type: boolean
        mappings:
          type: object
          additionalProperties:
            type: string
        defaultValue:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/MetricConverter'
        choices:
          type: array
          items:
            $ref: '#/components/schemas/MetricConverter'
    MetricList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Metric'
        meta:
          $ref: '#/components/schemas/ListMeta'
    MetricClassList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MetricClass'
        meta:
          $ref: '#/components/schemas/ListMeta'
    MibForMetricClassAndVendor:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        mibTableToUse:
          type: string
        primaryTable:
          type: string
        mibGroups:
          type: array
          items:
            $ref: '#/components/schemas/MibTableGroup'
        mibTables:
          type: array
          items:
            $ref: '#/components/schemas/MibTable'
    MibTable:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        oids:
          type: array
          items:
            $ref: '#/components/schemas/MibTableOid'
        mibFiles:
          type: array
          items:
            type: string
        moduleNames:
          type: array
          items:
            type: string
    MibTableGroup:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        mibTables:
          type: array
          items:
            type: string
    MibTableOid:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        alertable:
          type: boolean
        description:
          type: string
        label:
          type: string
        oidString:
          type: string
        type:
          type: string
        units:
          type: string
        indexOidReadable:
          type: boolean
        numeric:
          type: boolean
        scalar:
          type: boolean
        tableColumn:
          type: boolean
        index:
          type: boolean
        componentPart:
          type: boolean
        table:
          type: boolean
        leaf:
          type: boolean
        tableEntry:
          type: boolean
        trap:
          type: boolean
    UserDefinedFieldConverter:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        description:
          type: string
        requiredParams:
          type: object
          additionalProperties:
            type: object
            properties: {}
        optionalParams:
          type: object
          additionalProperties:
            type: object
            properties: {}
    UserDefinedFieldConverterList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserDefinedFieldConverter'
        meta:
          $ref: '#/components/schemas/ListMeta'
    UserDefinedFieldFilter:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        description:
          type: string
        requiredParams:
          type: object
          additionalProperties:
            type: object
            properties: {}
        optionalParams:
          type: object
          additionalProperties:
            type: object
            properties: {}
    MetricClassForVendor:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        metricClass:
          $ref: '#/components/schemas/MetricClass'
        vendor:
          type: string
        mib:
          $ref: '#/components/schemas/MibForMetricClassAndVendor'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/MetricFilter'
    MetricFilter:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        converterType:
          type: string
        fromTable:
          type: string
        fromOid:
          type: string
        lookupFromTable:
          type: string
        lookupFromOid:
          type: string
        value:
          type: string
        operand1:
          type: string
        operand2:
          type: string
        operation:
          type: string
        fieldValue:
          type: string
        enumMappings:
          type: boolean
        mappings:
          type: object
          additionalProperties:
            type: string
        defaultValue:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/MetricConverter'
        choices:
          type: array
          items:
            $ref: '#/components/schemas/MetricConverter'
        fieldName:
          type: string
        filterValue:
          type: string
        condition:
          type: string
        action:
          type: string
    ItemList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties: {}
        meta:
          $ref: '#/components/schemas/ListMeta'
    ComponentFieldFilter:
      type: object
      properties:
        description:
          type: string
        componentField:
          type: string
        filters:
          type: array
          items:
            type: string
    ComponentFilter:
      type: object
      properties:
        filterCondition:
          type: string
          enum:
          - match-all
          - match-any
        filterMode:
          type: string
          enum:
          - include
          - exclude
        description:
          type: string
        metricFieldFilters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComponentFieldFilter'
    ComponentFilterExtn:
      type: object
      properties:
        filterName:
          type: string
        metricClass:
          type: string
        lastModified:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        filterCondition:
          type: string
          enum:
          - match-all
          - match-any
        filterMode:
          type: string
          enum:
          - include
          - exclude
        description:
          type: string
        metricFieldFilters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ComponentFieldFilter'
        systemDefined:
          type: boolean
    ModelComponentHierarchyFilterBean:
      type: object
      properties:
        scopeOeObjIds:
          type: array
          items:
            type: string
        scopeIfcObjIds:
          type: array
          items:
            type: string
        modelComponentFilterBeanList:
          type: array
          items:
            $ref: '#/components/schemas/ModelComponentFilterBean'
    OrgPolicyGroupDTO:
      type: object
      properties:
        deviceDriver:
          type: string
        fileType:
          type: string
        userGroup:
          type: string
        description:
          type: string
        active:
          type: boolean
        lastModifiedUser:
          type: string
        lastModifiedTime:
          type: integer
          format: int64
        policies:
          uniqueItems: true
          type: array
          items:
            type: string
    ConstraintDTO:
      type: object
      properties:
        name:
          type: string
        fileSectionName:
          type: string
        matchPattern:
          type: array
          items:
            type: string
        matchAnyPattern:
          type: array
          items:
            type: string
    OrgPolicyConstraint:
      type: object
      properties:
        operator:
          type: string
          enum:
          - all
          - any
          - not_all
          - not_any
        constraints:
          type: array
          items:
            type: string
    OrgPolicyDTO:
      type: object
      properties:
        name:
          type: string
        violationSeverity:
          type: string
        active:
          type: boolean
        description:
          type: string
        fileSectionName:
          type: string
        policyConstraint:
          $ref: '#/components/schemas/OrgPolicyConstraint'
        filterMatchPattern:
          type: array
          items:
            type: string
        filterUnMatchPattern:
          type: array
          items:
            type: string
        matchPattern:
          type: array
          items:
            type: string
        matchAnyPattern:
          type: array
          items:
            type: string
        unMatchPattern:
          type: array
          items:
            type: string
        unMatchAllPattern:
          type: array
          items:
            type: string
        matchRange:
          type: string
    OrgPolicyDocDTO:
      type: object
      properties:
        deviceDriver:
          type: string
        fileType:
          type: string
        description:
          type: string
        active:
          type: boolean
        lastModifiedUser:
          type: string
        lastModifiedTime:
          type: integer
          format: int64
        fileSections:
          type: array
          items:
            $ref: '#/components/schemas/OrgPolicyFileSectionDTO'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/OrgPolicyDTO'
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintDTO'
    OrgPolicyFileSectionDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        cmdHierarchy:
          type: array
          items:
            type: string
        maskPattern:
          type: array
          items:
            type: string
    EmailSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          smtpServer:
            type: string
          smtpPort:
            type: integer
            format: int32
          sender:
            type: string
          subjectPrefix:
            type: string
          smtpUsername:
            type: string
          smtpPassword:
            type: string
          smtpUseStarttls:
            type: boolean
          smtpRequireSsl:
            type: boolean
          smtpEnableSsl:
            type: boolean
          smtpUseAuthentication:
            type: boolean
          smtpAuthenticationMethod:
            type: string
          smtpConnectionSecurity:
            type: string
          recipients:
            type: array
            items:
              type: string
    IQSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          tenantName:
            type: string
          clientID:
            type: string
          clientSecret:
            type: string
          optionalTrigger:
            type: string
          cloudDomain:
            type: string
          aadUrl:
            type: string
          authUrl:
            type: string
          scope:
            type: string
          webhookUrl:
            type: string
    SenderConfigurationModel:
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        active:
          type: boolean
        test:
          type: boolean
        error:
          type: string
        defaultTemplateTag:
          type: string
      discriminator:
        propertyName: type
    SlackSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          webhookURLs:
            type: array
            items:
              type: string
    Snmpv3USMUser:
      type: object
      properties:
        userName:
          type: string
        contextName:
          type: string
        securityName:
          type: string
        securityLevel:
          type: string
          enum:
          - NO_AUTH_NO_PRIV
          - AUTH_NO_PRIV
          - AUTH_PRIV
        authenticationProtocol:
          type: string
          enum:
          - SHA
          - MD5
          - HMAC128_SHA224
          - HMAC192_SHA256
          - HMAC256_SHA384
          - HMAC384_SHA512
          - NO_AUTH
        authenticationPassword:
          type: string
        privacyProtocol:
          type: string
          enum:
          - CBC_DES
          - CBC_3DES
          - CFB_AES_128
          - CFB_AES_192
          - CFB_AES_256
          - AES_192_3DES_EXT
          - AES_256_3DES_EXT
          - NO_PRIV
        privacyPassword:
          type: string
    SnowSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          server:
            type: string
          userName:
            type: string
          password:
            type: string
          protocol:
            type: string
          authMode:
            type: string
          clientID:
            type: string
          clientSecret:
            type: string
          token:
            type: string
          refreshToken:
            type: string
          endPoint:
            type: string
          authUrl:
            type: string
          accessTokenUrl:
            type: string
          scope:
            type: string
    SplunkSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          server:
            type: string
          port:
            type: integer
            format: int32
          protocol:
            type: string
          token:
            type: string
          index:
            type: string
          endPoint:
            type: string
    SyslogSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          protocol:
            type: string
          host:
            type: string
          port:
            type: integer
            format: int32
    TrapSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          remoteHost:
            type: string
          remotePort:
            type: integer
            format: int32
          communityString:
            type: string
          version:
            type: string
            enum:
            - v1
            - v2c
            - v2
            - v3
          v3User:
            $ref: '#/components/schemas/Snmpv3USMUser'
    WebhookSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          webhookURLs:
            type: array
            items:
              type: string
    XMattersSenderConfigurationModel:
      allOf:
      - $ref: '#/components/schemas/SenderConfigurationModel'
      - type: object
        properties:
          webhookURLs:
            type: array
            items:
              type: string
    SenderConfigurationModelList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SenderConfigurationModel'
        meta:
          $ref: '#/components/schemas/ListMeta'
    SenderConfigurationModels:
      type: object
      properties:
        senderConfigurationModels:
          type: array
          items:
            $ref: '#/components/schemas/SenderConfigurationModel'
    Base:
      required:
      - objectId
      - objectType
      type: object
      properties:
        objectId:
          type: integer
          format: int64
        objectType:
          type: string
    NotificationSuppressionConfig:
      type: object
      properties:
        name:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        enabled:
          type: boolean
          description: When true indicates that this notification suppression config
            is enabled
        description:
          type: string
          description: Description associated with the notification suppression config
        subject:
          type: string
          description: Template that will be used for the subject section of the notification
            template for the given notification suppression config
        message:
          type: string
          description: Template that will be used for the message section of the notification
            template for the given notification suppression config
        parentChildrenRelation:
          $ref: '#/components/schemas/ParentChildrenRelation'
        creationTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
          readOnly: true
        modifiedTime:
          type: integer
          format: int64
          readOnly: true
        links:
          $ref: '#/components/schemas/ResourceLink'
    ParentChildrenRelation:
      required:
      - childSet
      - enabled
      - parent
      type: object
      properties:
        enabled:
          type: boolean
        parent:
          $ref: '#/components/schemas/Base'
        childSet:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Base'
      discriminator:
        propertyName: name
    SiteGatewaysRelation:
      allOf:
      - $ref: '#/components/schemas/ParentChildrenRelation'
      - type: object
    ModifiableNotificationSuppressionConfig:
      type: object
      properties:
        name:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        enabled:
          type: boolean
          description: When true indicates that this notification suppression config
            is enabled
        description:
          type: string
          description: Description associated with the notification suppression config
        subject:
          type: string
          description: Template that will be used for the subject section of the notification
            template for the given notification suppression config
        message:
          type: string
          description: Template that will be used for the message section of the notification
            template for the given notification suppression config
        parentChildrenRelation:
          $ref: '#/components/schemas/ParentChildrenRelation'
        links:
          $ref: '#/components/schemas/ResourceLink'
    NotificationSuppressionConfigList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NotificationSuppressionConfig'
        meta:
          $ref: '#/components/schemas/ListMeta'
    NotificationTemplateTag:
      required:
      - notificationType
      - tagName
      type: object
      properties:
        default:
          type: boolean
          description: "When set as the default, it set all of the derived templates\
            \ as 'default'"
        id:
          type: string
        notificationType:
          type: string
          description: The type of notification
        tagName:
          type: string
          description: The tag name
        systemDefined:
          type: boolean
          description: Specifies if this notification template is system defined that
            is shipped as part of the install and cannot be modified
    NotificationTemplate:
      required:
      - baseObjectType
      - notificationType
      type: object
      properties:
        name:
          type: string
          description: Friendly name associated with the notification template
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          readOnly: true
        default:
          type: boolean
          description: "When set as the default, it unsets any other notification\
            \ template for that base object type and tag names as non-default"
        subject:
          type: string
          description: Template that will be used for the subject section of the notification
            template for the given notification and base object type
        message:
          type: string
          description: Template that will be used for the message section of the notification
            template for the given notification and base object type
        notificationType:
          type: string
          description: The type of notification
        baseObjectType:
          type: string
          description: The type of base object
          enum:
          - DEVICE
          - GROUP
          - TEST
          - PATH
          - NETWORK
          - IPSLA
          - SITE
        tagName:
          type: string
          readOnly: true
        systemDefined:
          type: boolean
          readOnly: true
        creationTime:
          type: integer
          format: int64
          readOnly: true
        updateTime:
          type: integer
          format: int64
          readOnly: true
        modifiedTime:
          type: integer
          format: int64
          readOnly: true
        links:
          $ref: '#/components/schemas/ResourceLink'
    ModifiableNotificationTemplateTag:
      type: object
      properties:
        default:
          type: boolean
          description: "When set as the default, it set all of the derived templates\
            \ as 'default'"
    NotificationTemplateList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplate'
        meta:
          $ref: '#/components/schemas/ListMeta'
    ModifiableNotificationTemplate:
      type: object
      properties:
        name:
          type: string
          description: Friendly name associated with the notification template
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        default:
          type: boolean
          description: "When set as the default, it unsets any other notification\
            \ template for that base object type and tag names as non-default"
        subject:
          type: string
          description: Template that will be used for the subject section of the notification
            template for the given notification and base object type
        message:
          type: string
          description: Template that will be used for the message section of the notification
            template for the given notification and base object type
        links:
          $ref: '#/components/schemas/ResourceLink'
    PollerCycleStatsBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        cycleTimestamp:
          type: integer
          format: int64
        totalDevices:
          type: integer
          format: int64
        avgTotalTime:
          type: number
          format: double
        avgWaitingTime:
          type: number
          format: double
        avgPollingTime:
          type: number
          format: double
        polledIfcs:
          type: integer
          format: int64
        generatedMetrics:
          type: integer
          format: int64
        generatedSamples:
          type: integer
          format: int64
        pollingLoads:
          type: integer
          format: int64
        busyPercentage:
          type: number
          format: double
        overLoaded:
          type: boolean
    PollerSummaryBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        interval:
          type: integer
          format: int32
        pollerCycleStatsBeanMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PollerCycleStatsBean'
        aggregatedPollerStatsBean:
          $ref: '#/components/schemas/PollerCycleStatsBean'
    PollerSummaryBeanList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PollerSummaryBean'
        meta:
          $ref: '#/components/schemas/ListMeta'
    PollerCycleStatsTimeSeriesBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        pollerName:
          type: string
        interval:
          type: integer
          format: int32
        pollerCycleStatsBeanMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PollerCycleStatsBean'
    PollingProfileBeanList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PollingProfileBean'
        meta:
          $ref: '#/components/schemas/ListMeta'
    ModifiablePollingProfileBean:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        description:
          type: string
        applyToAllDevices:
          type: boolean
        addDeviceAccessInfoIds:
          type: array
          description: List of deviceAccessInfoIds to add to this polling profile
          items:
            type: string
        removeDeviceAccessInfoIds:
          type: array
          description: List of deviceAccessInfoIds to remove from this polling profile
          items:
            type: string
        default:
          type: boolean
        active:
          type: boolean
        profileIdFormatted:
          type: string
        profileNameAndIdFormatted:
          type: string
        profileNameFormatted:
          type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    Role:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        assignable:
          type: boolean
        authorityNames:
          type: array
          items:
            type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    RoleList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        meta:
          $ref: '#/components/schemas/ListMeta'
    Authority:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        description:
          type: string
    AuthorityList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
        meta:
          $ref: '#/components/schemas/ListMeta'
    LastSessionInfo:
      type: object
      properties:
        loginTime:
          type: integer
          format: int64
        loginAddress:
          type: string
        loginServer:
          type: string
    User:
      type: object
      properties:
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        username:
          type: string
        password:
          type: string
        passwordExpiresAt:
          type: integer
          format: int64
        canChangePasswordAt:
          type: integer
          format: int64
        overridePasswordExpiresAt:
          type: integer
          format: int64
        overrideCanChangePasswordAt:
          type: integer
          format: int64
        sessionTimeout:
          type: integer
          format: int32
        overrideSessionTimeout:
          type: integer
          format: int32
        temporaryPassword:
          type: string
        disabled:
          type: boolean
        localAccess:
          type: boolean
        allowedLoginMethods:
          uniqueItems: true
          type: array
          items:
            type: string
        lastSession:
          $ref: '#/components/schemas/LastSessionInfo'
        roleNames:
          type: array
          items:
            type: string
        authorityNames:
          type: array
          items:
            type: string
        links:
          $ref: '#/components/schemas/ResourceLink'
    UserList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        meta:
          $ref: '#/components/schemas/ListMeta'
    ModifiableUser:
      required:
      - roleNames
      - username
      type: object
      properties:
        displayName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        username:
          type: string
        password:
          type: string
        resetPassword:
          type: boolean
        passwordValidTime:
          type: integer
          format: int64
        passwordExpiresAt:
          type: integer
          format: int64
        overridePasswordExpiresAt:
          type: integer
          format: int64
        overrideCanChangePasswordAt:
          type: integer
          format: int64
        sessionTimeout:
          type: integer
          format: int32
        overrideSessionTimeout:
          type: integer
          format: int32
        currentPassword:
          type: string
        localAccess:
          type: boolean
        disabled:
          type: boolean
        roleNames:
          maxItems: 2147483647
          minItems: 0
          type: array
          items:
            type: string
        allowedLoginMethods:
          uniqueItems: true
          type: array
          items:
            type: string
    SiteGatewaysBeanList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SiteGatewaysBean'
        meta:
          $ref: '#/components/schemas/ListMeta'
    ModifiableSiteGatewaysBean:
      type: object
      properties:
        name:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        description:
          type: string
          description: Description associated with the notification suppression config
        gateways:
          uniqueItems: true
          type: array
          description: Set of device id's that form the set of gateways for the site
          items:
            type: integer
            format: int64
        links:
          $ref: '#/components/schemas/ResourceLink'
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"

